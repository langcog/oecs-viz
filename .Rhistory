opacity = .8, opacityNoHover = TRUE,
fontFamily = "Source Sans Pro", fontSize = 12)
saveWidget(fn, "pub_network.html")
# nodes <- as_tibble(pubs_similarity_graph_combined) |>
#   mutate(id = row_number() - 1)
# node_ids <- nodes |> select(name, id)
# links <- pubs_similarity_combined |>
#   left_join(node_ids, by = c("article1" = "name")) |>
#   left_join(node_ids, by = c("article2" = "name")) |>
#   rename(source = id.x, target = id.y)
fn <- forceNetwork(Links = pubs_d3$links, Nodes = pubs_d3$nodes, Source = "source",
Target = "target", NodeID = "name",
# Value = "similarity_norm",
# Nodesize = "centrality",
Group = "group",
charge = -100,
zoom = TRUE,
# bounded = TRUE,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"),
opacity = .8, opacityNoHover = TRUE,
fontFamily = "Source Sans Pro", fontSize = 12)
saveWidget(fn, "pub_network.html")
head(pubs_d3)
pubs_similarity_graph_combined
pubs_similarity_combined
pubs_similarity_combined |> distinct()
pubs_similarity_combined |> distinct(article1, article2)
E(pubs_similarity_graph_combined)
as.data.frame(E(pubs_similarity_graph_combined))
head(as.data.frame(E(pubs_similarity_graph_combined)))
igraph_to_networkD3
# links <- pubs_similarity_combined |>
#   select(source = article1, target = article2, value = similarity_norm)
V(pubs_similarity_graph_combined) |> as.matrix |> data.frame() |> head()
# links <- pubs_similarity_combined |>
#   select(source = article1, target = article2, value = similarity_norm)
V(pubs_similarity_graph_combined) |> as.matrix |> data.frame |> head()
# links <- pubs_similarity_combined |>
#   select(source = article1, target = article2, value = similarity_norm)
V(pubs_similarity_graph_combined) |> as.matrix() |> data.frame() |> head()
# links <- pubs_similarity_combined |>
#   select(source = article1, target = article2, value = similarity_norm)
V(pubs_similarity_graph_combined) |> as.matrix() |> data.frame() |> head()
# links <- pubs_similarity_combined |>
#   select(source = article1, target = article2, value = similarity_norm)
V(pubs_similarity_graph_combined) |> as.matrix() |> as.data.frame() |> head()
# links <- pubs_similarity_combined |>
#   select(source = article1, target = article2, value = similarity_norm)
V(pubs_similarity_graph_combined) |> as.matrix() |> as.data.frame() |>
rownames_to_column("name")
?as.data.frame
# links <- pubs_similarity_combined |>
#   select(source = article1, target = article2, value = similarity_norm)
nodes <- V(pubs_similarity_graph_combined) |> as.matrix() |> as.data.frame() |>
rownames_to_column("name") |> rename(id = V1)
head(nodes)
# links <- pubs_similarity_combined |>
#   select(source = article1, target = article2, value = similarity_norm)
nodes <- V(pubs_similarity_graph_combined) |> as.matrix() |> as.data.frame() |>
rownames_to_column("name") |> rename(id = V1) |> mutate(id = id - 1)
nodes
nodes$name
nodes$name %>% data.frame() %>% setNames("name")
nodes$name %>% data.frame()
head(members)
# links <- pubs_similarity_combined |>
#   select(source = article1, target = article2, value = similarity_norm)
as_data_frame(pubs_similarity_graph_combined)
# links <- pubs_similarity_combined |>
#   select(source = article1, target = article2, value = similarity_norm)
as_data_frame(pubs_similarity_graph_combined) |> head()
head(nodes)
# links <- pubs_similarity_combined |>
#   select(source = article1, target = article2, value = similarity_norm)
nodes <- V(pubs_similarity_graph_combined) |> as.matrix() |> as.data.frame() |>
rownames_to_column("name") |> rename(id = V1) |> mutate(id = id - 1)
pubs_similarity_graph_combined |>
as_data_frame(pubs_similarity_graph_combined) |>
left_join(nodes, by = c("from" = "name")) |>
left_join(nodes, by = c("to" = "name"))
pubs_similarity_graph_combined |>
as_data_frame(pubs_similarity_graph_combined)
pubs_similarity_graph_combined |>
as_data_frame() |>
left_join(nodes, by = c("from" = "name")) |>
left_join(nodes, by = c("to" = "name"))
pubs_similarity_graph_combined |>
as_data_frame() |>
left_join(nodes, by = c("from" = "name")) |>
left_join(nodes, by = c("to" = "name")) |> head()
pubs_similarity_graph_combined |>
as_data_frame() |>
left_join(nodes, by = c("from" = "name")) |>
left_join(nodes, by = c("to" = "name")) |>
rename(source = id.x, target = id.y)
pubs_similarity_graph_combined |>
as_data_frame() |>
left_join(nodes, by = c("from" = "name")) |>
left_join(nodes, by = c("to" = "name")) |>
rename(source = id.x, target = id.y) |> head()
head(nodes)
pubs_similarity_graph_combined |> as_data_frame("vertices") |> head()
pubs_similarity_graph_combined |>
as_data_frame("vertices") |>
mutate(id = row_number())
pubs_similarity_graph_combined |>
as_data_frame("vertices") |>
mutate(id = row_number()) |>
remove_rownames()
nodes <- pubs_similarity_graph_combined |>
as_data_frame("vertices") |>
mutate(id = row_number()) |>
remove_rownames()
nodes <- pubs_similarity_graph_combined |>
as_data_frame("vertices") |>
mutate(id = row_number() - 1) |>
remove_rownames()
links <- pubs_similarity_graph_combined |>
as_data_frame("edges") |>
left_join(nodes, by = c("from" = "name")) |>
left_join(nodes, by = c("to" = "name")) |>
rename(source = id.x, target = id.y)
head(nodes)
head(links)
node_ids <- nodes |> select(name, id)
head(node_ids)
links <- pubs_similarity_graph_combined |>
as_data_frame("edges") |>
left_join(node_ids, by = c("from" = "name")) |>
left_join(node_ids, by = c("to" = "name")) |>
rename(source = id.x, target = id.y)
head(links)
# members <- membership(lc)
# pubs_d3 <- igraph_to_networkD3(pubs_similarity_graph_combined,
#                                group = members)
# nodes <- as_tibble(pubs_similarity_graph_combined) |>
#   mutate(id = row_number() - 1)
# node_ids <- nodes |> select(name, id)
# links <- pubs_similarity_combined |>
#   left_join(node_ids, by = c("article1" = "name")) |>
#   left_join(node_ids, by = c("article2" = "name")) |>
#   rename(source = id.x, target = id.y)
fn <- forceNetwork(
Links = links, Nodes = nodes, Source = "source",
Target = "target", NodeID = "name",
Value = "similarity_norm",
# Nodesize = "centrality",
Group = "group",
charge = -100,
zoom = TRUE,
# bounded = TRUE,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"),
opacity = .8, opacityNoHover = TRUE,
fontFamily = "Source Sans Pro", fontSize = 12)
saveWidget(fn, "pub_network.html")
# members <- membership(lc)
# pubs_d3 <- igraph_to_networkD3(pubs_similarity_graph_combined,
#                                group = members)
# nodes <- as_tibble(pubs_similarity_graph_combined) |>
#   mutate(id = row_number() - 1)
# node_ids <- nodes |> select(name, id)
# links <- pubs_similarity_combined |>
#   left_join(node_ids, by = c("article1" = "name")) |>
#   left_join(node_ids, by = c("article2" = "name")) |>
#   rename(source = id.x, target = id.y)
fn <- forceNetwork(
Links = links, Nodes = nodes, Source = "source",
Target = "target", NodeID = "name",
Value = "similarity_norm",
Nodesize = "centrality",
Group = "group",
charge = -100,
zoom = TRUE,
# bounded = TRUE,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"),
opacity = .8, opacityNoHover = TRUE,
fontFamily = "Source Sans Pro", fontSize = 12)
saveWidget(fn, "pub_network.html")
# members <- membership(lc)
# pubs_d3 <- igraph_to_networkD3(pubs_similarity_graph_combined,
#                                group = members)
# nodes <- as_tibble(pubs_similarity_graph_combined) |>
#   mutate(id = row_number() - 1)
# node_ids <- nodes |> select(name, id)
# links <- pubs_similarity_combined |>
#   left_join(node_ids, by = c("article1" = "name")) |>
#   left_join(node_ids, by = c("article2" = "name")) |>
#   rename(source = id.x, target = id.y)
fn <- forceNetwork(
Links = links, Nodes = nodes, Source = "source",
Target = "target", NodeID = "name",
Value = "similarity_norm",
# Nodesize = "centrality",
Group = "group",
charge = -100,
zoom = TRUE,
# bounded = TRUE,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"),
opacity = .8, opacityNoHover = TRUE,
fontFamily = "Source Sans Pro", fontSize = 12)
saveWidget(fn, "pub_network.html")
fn <- forceNetwork(
Links = links, Nodes = nodes, Source = "source",
Target = "target", NodeID = "name",
Value = "similarity_norm",
# Nodesize = "centrality",
Group = "group",
charge = -100,
zoom = TRUE,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"),
opacity = .8, opacityNoHover = TRUE,
fontFamily = "Source Sans Pro", fontSize = 14)
saveWidget(fn, "pub_network.html")
fn <- forceNetwork(
Links = links, Nodes = nodes, Source = "source",
Target = "target", NodeID = "name",
Value = "similarity_norm",
# Nodesize = "centrality",
Group = "group",
charge = -100,
zoom = TRUE,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"),
opacity = .8, opacityNoHover = TRUE,
fontFamily = "Source Sans Pro", fontSize = 12)
saveWidget(fn, "pub_network.html")
?forceNetwork
fn <- forceNetwork(
Links = links, Nodes = nodes, Source = "source",
Target = "target", NodeID = "name",
Value = "similarity_norm",
# Nodesize = "centrality",
Group = "group",
linkDistance = JS("function(d){return d.value * 10}"),
charge = -100,
zoom = TRUE,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"),
opacity = .8, opacityNoHover = TRUE,
fontFamily = "Source Sans Pro", fontSize = 12)
forceNetwork(
Links = links, Nodes = nodes, Source = "source",
Target = "target", NodeID = "name",
Value = "similarity_norm",
# Nodesize = "centrality",
Group = "group",
linkDistance = JS("function(d){return d.value * 10}"),
charge = -100,
zoom = TRUE,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"),
opacity = .8, opacityNoHover = TRUE,
fontFamily = "Source Sans Pro", fontSize = 12)
forceNetwork(
Links = links, Nodes = nodes, Source = "source",
Target = "target", NodeID = "name",
Value = "similarity_norm",
# Nodesize = "centrality",
Group = "group",
linkDistance = JS("function(d){return d.value * 5}"),
charge = -100,
zoom = TRUE,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"),
opacity = .8, opacityNoHover = TRUE,
fontFamily = "Source Sans Pro", fontSize = 12)
fn <- forceNetwork(
Links = links, Nodes = nodes, Source = "source",
Target = "target", NodeID = "name",
Value = "similarity_norm",
# Nodesize = "centrality",
Group = "group",
linkDistance = JS("function(d){return d.value * 5}"),
charge = -100,
zoom = TRUE,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"),
opacity = .8, opacityNoHover = TRUE,
fontFamily = "Source Sans Pro", fontSize = 12)
saveWidget(fn, "pub_network.html")
fn <- forceNetwork(
Links = links, Nodes = nodes, Source = "source",
Target = "target", NodeID = "name",
Value = "similarity_norm",
# Nodesize = "centrality",
Group = "group",
linkDistance = JS("function(d){return d.value * 5}"),
linkWidth = JS("function(d) { return d.value; }")
charge = -100,
fn <- forceNetwork(
Links = links, Nodes = nodes, Source = "source",
Target = "target", NodeID = "name",
Value = "similarity_norm",
# Nodesize = "centrality",
Group = "group",
linkDistance = JS("function(d){return d.value * 5}"),
linkWidth = JS("function(d) { return d.value; }"),
charge = -100,
zoom = TRUE,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"),
opacity = .8, opacityNoHover = TRUE,
fontFamily = "Source Sans Pro", fontSize = 12)
saveWidget(fn, "pub_network.html")
fn <- forceNetwork(
Links = links, Nodes = nodes, Source = "source",
Target = "target", NodeID = "name",
Value = "similarity_norm",
# Nodesize = "centrality",
Group = "group",
linkDistance = JS("function(d){ return d.value; }"),
linkWidth = JS("function(d) { return d.value; }"),
charge = -100,
zoom = TRUE,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"),
opacity = .8, opacityNoHover = TRUE,
fontFamily = "Source Sans Pro", fontSize = 12)
saveWidget(fn, "pub_network.html")
fn <- forceNetwork(
Links = links, Nodes = nodes, Source = "source",
Target = "target", NodeID = "name",
Value = "similarity_norm",
# Nodesize = "centrality",
Group = "group",
linkDistance = JS("function(d){ return d.value; }"),
linkWidth = JS("function(d) { return d.value; }"),
charge = -500,
zoom = TRUE,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"),
opacity = .8, opacityNoHover = TRUE,
fontFamily = "Source Sans Pro", fontSize = 12)
saveWidget(fn, "pub_network.html")
fn <- forceNetwork(
Links = links, Nodes = nodes, Source = "source",
Target = "target", NodeID = "name",
Value = "similarity_norm",
# Nodesize = "centrality",
Group = "group",
linkDistance = JS("function(d){ return d.value; }"),
linkWidth = JS("function(d) { return d.value; }"),
charge = -200,
zoom = TRUE,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"),
opacity = .8, opacityNoHover = TRUE,
fontFamily = "Source Sans Pro", fontSize = 12)
saveWidget(fn, "pub_network.html")
fn <- forceNetwork(
Links = links, Nodes = nodes, Source = "source",
Target = "target", NodeID = "name",
Value = "similarity_norm",
# Nodesize = "centrality",
Group = "group",
# linkDistance = JS("function(d){ return d.value; }"),
linkWidth = JS("function(d) { return d.value; }"),
charge = -200,
zoom = TRUE,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"),
opacity = .8, opacityNoHover = TRUE,
fontFamily = "Source Sans Pro", fontSize = 12)
saveWidget(fn, "pub_network.html")
fn <- forceNetwork(
Links = links, Nodes = nodes, Source = "source",
Target = "target", NodeID = "name",
Value = "similarity_norm",
# Nodesize = "centrality",
Group = "group",
# linkDistance = JS("function(d){ return d.value; }"),
linkWidth = JS("function(d) { return d.value; }"),
charge = -100,
zoom = TRUE,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"),
opacity = .8, opacityNoHover = TRUE,
fontFamily = "Source Sans Pro", fontSize = 12)
saveWidget(fn, "pub_network.html")
saveWidget(fn, "plots/oecs_d3network.html")
saveWidget(fn, "plots/oecs_d3network.html")
install.packages('sigmaNet')
devtools::install_github('iankloo/sigmaNet')
renv::install_github('iankloo/sigmaNet')
renv::install('iankloo/sigmaNet')
library(sigmaNet)
layout <- layout_with_fr(pubs_similarity_graph_combined)
sig <- sigmaFromIgraph(pubs_similarity_graph_combined, layout = layout)
sig
sig <- sigmaFromIgraph(pubs_similarity_graph_combined,
layout = pubs_layout_combined)
sig
pubs_similarity_graph_combined
data(lesMis)
head(lesMis)
upgrade_graph(lesMis)
as_data_frame(upgrade_graph(lesMis), "both")
lmis <- as_data_frame(upgrade_graph(lesMis), "both")
head(lmis$edges)
head(lmis$vertices)
sig <- sigmaFromIgraph(pubs_similarity_graph_combined,
layout = pubs_layout_combined) |>
addNodeLabels(labelAttr = "name") %>%
addEdgeSize(sizeAttr = "similarity_norm", minSize = .1, maxSize = 2) %>%
addNodeSize(sizeMetric = "centrality", minSize = 2, maxSize = 8) %>%
addNodeColors(colorAttr = "group", colorPal = 'Set1')
?addNodeSize
sig <- sigmaFromIgraph(pubs_similarity_graph_combined,
layout = pubs_layout_combined) |>
addNodeLabels(labelAttr = "name") |>
addEdgeSize(sizeAttr = "similarity_norm", minSize = .1, maxSize = 2) |>
# addNodeSize(sizeMetric = "degree", minSize = 2, maxSize = 8) |>
addNodeColors(colorAttr = "group", colorPal = 'Set1')
sig
?sigmaFromIgraph
?forceNetwork
nodeClick <- 'console.log(d.name);'
fn <- forceNetwork(
Links = links, Nodes = nodes, Source = "source",
Target = "target", NodeID = "name",
Value = "similarity_norm",
# Nodesize = "centrality",
Group = "group",
# linkDistance = JS("function(d){ return d.value; }"),
linkWidth = JS("function(d) { return d.value; }"),
charge = -100,
zoom = TRUE,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"),
opacity = .8, opacityNoHover = TRUE,
fontFamily = "Source Sans Pro", fontSize = 12,
clickAction = nodeClick)
saveWidget(fn, "plots/oecs_d3network.html")
nodeClick <- 'console.log(d);'
fn <- forceNetwork(
Links = links, Nodes = nodes, Source = "source",
Target = "target", NodeID = "name",
Value = "similarity_norm",
# Nodesize = "centrality",
Group = "group",
# linkDistance = JS("function(d){ return d.value; }"),
linkWidth = JS("function(d) { return d.value; }"),
charge = -100,
zoom = TRUE,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"),
opacity = .8, opacityNoHover = TRUE,
fontFamily = "Source Sans Pro", fontSize = 12,
clickAction = nodeClick)
saveWidget(fn, "plots/oecs_d3network.html")
pub_ids
save(pubs_similarity_graph_combined, file = "pub_graph.RData")
?save
save(pubs_similarity_graph_combined, pub_ids, file = "pub_data.RData")
?ojs_define
?remove_rownames
?forceNetwork
?htmlwidgets
nodes
nodes <- pubs_similarity_graph_combined |>
as_data_frame("vertices") |>
mutate(id = row_number() - 1) |>
remove_rownames() |>
mutate(id = 123)
nodes
nodes
?forceNetwork
forceNetwork(
Links = links, Nodes = nodes, Source = "source",
Target = "target", NodeID = "name",
Value = "similarity_norm",
# Nodesize = "centrality",
Group = "group",
# linkDistance = JS("function(d){ return d.value; }"),
linkWidth = JS("function(d) { return d.value; }"),
charge = -100,
zoom = TRUE,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"),
opacity = .8, opacityNoHover = TRUE,
fontFamily = "Source Sans Pro", fontSize = 12,
clickAction = nodeClick)
pubs
as_tibble(pub_ids)
enframe(pub_ids)
?enframe
str(pub_ids)
pub_ids |> unlist() |> enframe()
pubs_similarity_graph_combined
pub_ids_tbl <- pub_ids |> unlist() |> enframe(value = pub_id)
save(pubs_similarity_graph_combined, pub_ids_tbl, file = "pub_data.RData")
nodes <- pubs_similarity_graph_combined |>
as_data_frame("vertices") |>
mutate(id = row_number() - 1) |>
remove_rownames() |>
left_join(pub_ids_tbl)
nodes
head(nodes)
pub_ids_tbl
pub_ids_tbl <- pub_ids |> unlist() |> enframe(value = "pub_id")
save(pubs_similarity_graph_combined, pub_ids_tbl, file = "pub_data.RData")
nodes <- pubs_similarity_graph_combined |>
as_data_frame("vertices") |>
mutate(id = row_number() - 1) |>
remove_rownames() |>
left_join(pub_ids_tbl)
head(nodes)
pubs[[1]]
pubs[[1]] |> names()
slug
pub_slugs
str(pubs)
names(pubs)
head(pub_slugs)
slugs <- pub_slugs |> unlist() |> enframe(value = "slug")
slugs
save(pubs_similarity_graph_combined, slugs, file = "pub_data.RData")
nodes <- pubs_similarity_graph_combined |>
as_data_frame("vertices") |>
mutate(id = row_number() - 1) |>
remove_rownames() |>
left_join(slugs)
head(nodes)
?forceNetwork
?forceNetwork
?forceNetwork
